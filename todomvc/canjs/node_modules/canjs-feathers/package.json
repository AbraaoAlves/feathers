{
  "name": "canjs-feathers",
  "description": "CanJS model implementation using canjs-feathers",
  "version": "0.2.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/feathersjs/canjs-feathers.git"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/feathersjs/canjs-feathers/issues"
  },
  "homepage": "https://github.com/feathersjs/canjs-feathers",
  "keywords": [
    "canjs",
    "feathers-plugin"
  ],
  "author": {
    "name": "David Luecke",
    "email": "daff@neyeon.com",
    "url": "https://feathersjs.com"
  },
  "contributors": [],
  "engines": {
    "node": ">=0.10.0"
  },
  "main": "lib/feathers.js",
  "scripts": {
    "prepublish": "npm run build",
    "publish": "git push origin --tags",
    "build": "rm -rf dist/ && mkdir -p dist && browserify lib/feathers.js --standalone canFeathers --outfile dist/canjs-feathers.js",
    "release:patch": "npm version patch && npm publish",
    "release:minor": "npm version minor && npm publish",
    "release:major": "npm version major && npm publish",
    "jshint": "jshint lib/. test/. --config",
    "testee": "node test/server & testee test.html --browsers firefox --reporter Spec",
    "test": "npm run jshint && npm run testee"
  },
  "directories": {
    "lib": "lib"
  },
  "devDependencies": {
    "body-parser": "^1.12.4",
    "bower": "^1.4.1",
    "browserify": "^10.2.4",
    "feathers": "^1.1.0-pre.0",
    "feathers-client": "^0.1.0",
    "jshint": "^2.8.0",
    "testee": "^0.2.0"
  },
  "readme": "# CanJS Feathers\n\n[![Build Status](https://travis-ci.org/feathersjs/canjs-feathers.png?branch=master)](https://travis-ci.org/feathersjs/canjs-feathers)\n\nCanJS model implementation that connects to Feathers services through [feathers-client](https://github.com/feathersjs/feathers-client).\n\n## Getting Started\n\nUse NPM\n\n    npm install canjs-feathers\n\nOr Bower to install the package\n\n    bower install canjs-feathers\n\nOr [download the JavaScript](https://github.com/feathersjs/canjs-feathers/archive/master.zip) and put it in your CanJS project folder. Use it with any module loader (AMD or CommonJS) or without via the global `canFeathers` method.\n\n### Set up a connection\n\nCanJS models can be created by passing a Feathers client. You can use any connector supported by feathers-client (jQuery, Request, Superagent, Socket.io or Primus). First, either load or include the feathers-client and canjs-feathers JavaScript:\n\n```html\n<script type=\"text/javascript\" src=\"node_modules/feathers-client/dist/feathers.js\"></script>\n<script type=\"text/javascript\" src=\"node_modules/canjs-feathers/dist/canjs-feathers.js\"></script>\n```\n\n```js\nvar feathers = require('feathers-client');\nvar canFeathers = require('canjs-feathers');\n```\n\nLet's use Socket.io for the example:\n\n```js\n// Connect to the Socket\nvar socket = io();\n// Create feathers-client application connecting to the socket\nvar app = feathers().configure(feathers.socketio(socket));\n\n// Pass the app to get a base model\nvar Model = canFeathers(app);\n// Then extend it with `resource` set to the service name.\nvar Todo = Model.extend({\n  resource: 'todos'\n}, {});\n```\n\nThen we can use it like any other CanJS model:\n\n```js\nvar myTodo = new Todo({\n  text: 'A Todo',\n  complete: false\n});\n\nmyTodo.save().then(function() {\n  myTodo.attr('text', 'Update Todo');\n  myTodo.save();\n});\n```\n\n## Authors\n\n- [David Luecke](https://github.com/daffl)\n- [Marshall Thompson](https://github.com/marshallswain)\n\n## License\n\nCopyright (c) 2015 David Luecke\n\nLicensed under the [MIT license](LICENSE).\n",
  "readmeFilename": "readme.md",
  "gitHead": "fd4af7f8fc749011e58a0c9a326780de754a05ac",
  "_id": "canjs-feathers@0.2.0",
  "_shasum": "4d0cdd6a04187fb7469e48c57ba932e65a210c0b",
  "_from": "canjs-feathers@*"
}
